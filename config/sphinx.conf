source src1 
{
        type            = mysql
        sql_host        = localhost
        sql_user        = root
        sql_pass        = ""
        sql_db          = test
        sql_port        = 3306
        sql_query       = \
        SELECT id, group_id, group_id2, title, content  \
        FROM documents

        sql_attr_uint   = group_id
        sql_field_string = title
        sql_attr_timestamp	= date_added
}

## index definition
index test1
{
    source              = src1
    path                = /var/lib/sphinxsearch/data/test1
    docinfo             = extern
    dict                = keywords
    
}

## indexer 
indexer
{
	mem_limit		= 128M
	# max_xmlpipe2_field	= 4M
	# write_buffer		= 1M
	# max_file_field_buffer	= 32M

}

#########################"
source src_auteurs
{
    type            = mysql
    sql_host        = localhost
    sql_user        = root
    sql_pass        =""
    sql_db          = bibliotheque
    sql_port        = 3306
    sql_query       = SELECT id, nom AS title, bio FROM auteurs
    sql_field_string = title
    sql_field_string = bio
}
source src_livres
{
    type            = mysql
    sql_host        = localhost
    sql_user        = root
    sql_pass        =""
    sql_db          = bibliotheque
    sql_port        = 3306
    sql_query       = SELECT id, titre AS title, description FROM livres
    sql_field_string = title
    sql_field_string = description
}
index index_auteurs_stemmed
{
    source          = src_auteurs
    path            = /var/lib/sphinxsearch/data/index_auteurs_stemmed
    docinfo         = extern
    dict            = keywords
    morphology      = stem_en
}

index index_livres
{
    source          = src_livres
    path            = /var/lib/sphinxsearch/data/index_livres
    docinfo             = extern
    dict                = keywords
    #charset_type    = utf-8
}


searchd
{
  listen			= 9312:sphinx		#SphinxAPI port
  listen			= 9306:mysql41		#SphinxQL port
  log				= /var/log/sphinxsearch/searchd.log
  query_log			= /var/log/sphinxsearch/query.log
  read_timeout		= 5
  max_children		= 30
  pid_file			= /var/run/sphinxsearch/searchd.pid
  seamless_rotate	= 1
  preopen_indexes	= 1
  unlink_old		= 1
  binlog_path		= /var/lib/sphinxsearch/data
}
#######

# inherited index example

index test1stemmed : test1
{
	path			= /var/lib/sphinxsearch/data/test1stemmed
	morphology		= stem_en
}


index test2stemmed : index_auteurs_stemmed
{
    path            = /var/lib/sphinxsearch/data/test2stemmed
}

index test3stemmed : index_livres
{
    path            = /var/lib/sphinxsearch/data/test3stemmed
    morphology      = stem_en
}


# distributed index example

index dist1
{
	type			= distributed
	local			= test1
	local			= test1stemmed
        local	              = test2stemmed
        local			= test3stemmed
	agent			= localhost:9313:remote1
	agent			= localhost:9314:remote2,remote3
	# agent			= /var/run/searchd.sock:remote4

	agent_connect_timeout	= 1000

	agent_query_timeout		= 3000

	# ha_strategy				= nodeads

	# path to RLP context file
	# optional, defaut is empty
	#
	# rlp_context = /usr/local/share/sphinx/rlp/rlp-context.xml
}


# realtime index example
#
# you can run INSERT, REPLACE, and DELETE on this index on the fly
# using MySQL protocol (see 'listen' directive below)
index rt
{
	# 'rt' index type must be specified to use RT index
	type			= rt

	path			= /var/lib/sphinxsearch/data/rt

	# RAM chunk size limit
	# RT index will keep at most this much data in RAM, then flush to disk
	# optional, default is 128M
	#
	# rt_mem_limit		= 512M

	# full-text field declaration
	# multi-value, mandatory
	rt_field		= title
	rt_field		= content

	# unsigned integer attribute declaration
	# multi-value (an arbitrary number of attributes is allowed), optional
	# declares an unsigned 32-bit attribute
	rt_attr_uint		= gid

	# RT indexes currently support the following attribute types:
	# uint, bigint, float, timestamp, string, mva, mva64, json
	#
	# rt_attr_bigint		= guid
	# rt_attr_float		= gpa
	# rt_attr_timestamp	= ts_added
	# rt_attr_string		= author
	# rt_attr_multi		= tags
	# rt_attr_multi_64	= tags64
	# rt_attr_json		= extra_data
}

# --eof--
